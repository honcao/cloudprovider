func main() {
	//fmt.Printf("Hello, world.\n")
	fmt.Printf(os.Getenv("APIVERSION_ARM_NETWORK"))
	fmt.Printf(os.Getenv("GOPATH"))
	os.Setenv("AZURE_ENVIRONMENT_FILEPATH", "C:\\gopath\\src\\github.com\\honcao\\cloudprovider\\config\\azurestackcloud.json")
	os.Setenv("APIVERSION_ARM_COMPUTE", "2016-03-30")
	os.Setenv("APIVERSION_ARM_COMPUTE_CONTAINERSERVICE", "2016-03-30")
	os.Setenv("APIVERSION_ARM_CONTAINERREGISTRY", "2017-10-01")
	os.Setenv("APIVERSION_ARM_DISK", "2016-04-30-preview")
	os.Setenv("APIVERSION_ARM_NETWORK", "2015-06-15")
	os.Setenv("APIVERSION_ARM_NETWORK_SCALESET", "2015-06-15")
	os.Setenv("APIVERSION_ARM_STORAGE", "2016-01-01")
	os.Setenv("APIVERSION_STORAGE", "2016-05-31")
	resourceManagerEndpoint := os.Getenv("RESOURCEMANAGERENDPOINT")     // "https://management.local.azurestack.external"
	fmt.Println("abc")
	fmt.Println(os.Getenv("SUBSCRIPTIONID"))
	subscriptionID := os.Getenv("SUBSCRIPTIONID")                       //"110054c2-21bc-442c-b214-c31c2578a371"
	serviceManagementEndpoint := os.Getenv("SERVICEMANAGEMENTENDPOINT") //"https://management.azurestackci11.onmicrosoft.com/8d887891-6596-46c4-bdb6-1fbde1edbc7e"
	tenantID := os.Getenv("TENANTID")                                   //"d9b782d5-d098-4374-8f2c-3907cc34611c"
	activeDirectoryEndpoint := os.Getenv("ACTIVEDIRECTORYENDPOINT")     //"https://login.windows.net/"
	aADClientID := os.Getenv("AADCLIENTID")                             //"a7a77abf-ad26-4bb8-9abd-329d03d14804"
	aADClientSecret := os.Getenv("AADCLIENTSECRET")                     //"7iiAzT+66U3zazrlnZjNwAVqf7tFscThEVOx1TrGunc="
	servicePrincipalToken, _ := GetServicePrincipalToken(activeDirectoryEndpoint, tenantID, serviceManagementEndpoint, aADClientID, aADClientSecret)

	storageAccountClient := storage.NewAccountsClientWithBaseURI(resourceManagerEndpoint, subscriptionID)
	storageAccountClient.Authorizer = autorest.NewBearerAuthorizer(servicePrincipalToken)
	configureUserAgent(&storageAccountClient.Client)

	SAName := os.Getenv("SANAME")               //"pvc2068417454001"
	resourceGroup := os.Getenv("RESOURCEGROUP") //"kl214"
	ctx := context.Background()
	listKeysResult, err := storageAccountClient.ListKeys(ctx, resourceGroup, SAName)

	if err != nil {
		fmt.Println(err)
	}
	if listKeysResult.Keys == nil {
		fmt.Printf("azureDisk - empty listKeysResult in storage account:%s keys", SAName)
		return
	}
	for _, v := range *listKeysResult.Keys {
		fmt.Printf(" Key Name: %s  key vaule: %s", *v.KeyName, *v.Value)
	}
}